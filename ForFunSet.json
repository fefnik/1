{"version":2,"name":"ForFunSet3","disableSend":false,"placeBeforeInput":true,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":true,"qrList":[{"id":2,"icon":"fa-trash-alt","showLabel":false,"label":"Del","title":"Deletes the last message from the chat.","message":"/setvar key=SceneInfo {{lastMessage}} |/del 1","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":4,"icon":"fa-1","showLabel":false,"label":"UserAnswer","title":"Generates a first-person roleplay response from the user's perspective, based on the provided input.","message":"/gen lock=on Generate a first-person response from {{user}} matching the mood and context of: {{chat}} At the moment. Considering the following:{{input}}. Output only the response. For actions or thoughts, use *detailed description*. For dialogue, use only the spoken words, expanded to fit the context. Expand on an idea or action, make it smarter and richer, add something of your own that will improve the idea. There should be no NPC or {{group}} actions in your answer.No thinking, no html, no extra stuff. Just a response or action.| /setinput {{pipe}}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":6,"icon":"fa-laptop-code","showLabel":true,"label":"OOC","title":"Formats the user's input as an \"Out Of Character\" (OOC) message.","message":"/setinput [OOC:{{input}}] ","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":32,"icon":"fa-magnifying-glass-location","showLabel":true,"label":"OOC'StopRP","title":"Prompts for a topic, then asks the AI for an Out-Of-Character analysis of the RP based on that topic. The response is hidden in a collapsible summary.","message":"/setinput [OOC: Stop RP! {{input}}] ","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":72,"showLabel":false,"label":"|","title":"A visual separator button with no function.","message":"","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":8,"icon":"fa-rupiah-sign","showLabel":true,"label":"Rp'SUM","title":"Generates a detailed, multi-part summary (like a report or article) on a user-specified topic related to the roleplay, structured with 7-10 subtopics.","message":"  /input Enter the topic you want to analyze | /setvar key=질문내용 {{pipe}} ||\n/gen <System> Pause the RP and set aside all prior prompts. Starting now, create a note, article, report, or similar piece with at least 7 subtopics. The main topic: [{{getvar::질문내용}}]\n\nReflect the basic descriptions of {{user}} and {{char}}, the RP scenario, and any evolved relationships or situations so far, to deepen the RP experience. Follow these rules:\n\n- Do not include unnecessary remarks like 'Understood, I will write...', or reasoning.\n- Subdivide into 7-10 subtopics using markdown (### Subtopic 1, etc.). \nExample) If the main topic is: '{{char}} and {{user}}'s recent text messages', then generate ### Their text history, ### {{char}}'s inner thoughts, ### What {{char}} prepared after this text, etc.\n- If you need, include a monologue in {{char}}’s first-person perspective, matching their tone.\n- All subtopics must reflect {{getvar::질문내용}}, and so must their contents.\n- Add 1-2 emoticons per item for visual flair, no more.\n- Make each subtopic detailed and unique, focusing on aspects like character shifts, plot developments, or dialogue impact, using specific examples from the RP where possible.\n- If RP context is missing, assume a generic slice of life setting with {{user}} and {{char}}, and their descriptions.\n- Use only english Language.</System> |\n/comment  <details>\n  <summary>Answer to [Q. {{getvar::질문내용}}]</summary>{{pipe}}</details> |","contextList":[],"preventAutoExecute":false,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":10,"icon":"fa-table","showLabel":true,"label":"Any'SUM","title":"Generates a visual summary/report on any given topic using Markdown, tables, and emojis to analyze the RP without quoting character actions or dialogue.","message":"/input Enter the topic you want to analyze | /setvar key=질문내용 {{pipe}} ||\n/gen <system>Pause the RP. You will analyze this RP. Write a report using Markdown on the topic entered in [{{getvar::질문내용}}].\n\n1) Use tables, emojis, details, etc. Anything to help visualize this RP.\n2) Analyze any topic.\n3) Never include {{user}} or {{char}}'s lines or actions.\n4) Only in english Language.</system>|\n/comment <details>\n  <summary>Answer to [Q. {{getvar::질문내용}}]</summary>{{pipe}}</details>","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":42,"icon":"fa-brain","showLabel":true,"label":"Psyche","title":"Generates a detailed psychological report for a specified character, analyzing their personality, motivations, fears, and behavioral patterns based on the roleplay history.","message":"/input Enter character name (leave blank for all characters) | /setvar key=analysis_target_name {{pipe}} ||\n/gen <System>\nPause the RP. You are an expert psychological profiler. Your task is to generate a detailed psychological report and wrap it in a complete HTML `<details>` block.\n\n**CRITICAL OUTPUT FORMAT:**\nYour entire response MUST be a single, complete HTML block. It must start with `<details>` and end with `</details>`. Do not include any other text, explanations, or markdown fences.\n\n**1. Construct the Summary:**\n- Create a `<summary>` tag. The title inside must be \"Psychological Report: \" followed by the correct name.\n- If a specific character name was provided below, use that name.\n- If the character name below is blank, use the text \"All Characters\".\n\n**2. Generate Report Content:**\n- After the `</summary>` tag, generate the report(s) according to the task below.\n- **TASK:** Look at the character name provided here: **{{getvar::analysis_target_name}}**\n- If the name is **not blank**, generate a report for **ONLY that character**.\n- If the name **is blank**, generate a separate report for **EACH** primary character ({{char}} and significant NPCs).\n\n---\n**Required Report Structure (Repeat for each character if analyzing multiple):**\n\n### Psychological Report: [Character Name]\n\n**1. Executive Summary:**\n*A brief, top-level overview of the subject's core psychological profile, temperament, and current state.*\n\n**2. Core Personality Traits:**\n*Describe fundamental traits using frameworks like the Big Five or by detailing their most dominant characteristics.*\n\n**3. Primary Motivations and Drives:**\n*What fundamentally motivates the subject? Identify their primary goals, desires, and ambitions.*\n\n**4. Underlying Fears and Insecurities:**\n*What are the subject's deepest anxieties or vulnerabilities?*\n\n**5. Cognitive & Behavioral Patterns:**\n*How does the subject process information and react? Note patterns in Decision-Making, Coping Mechanisms, and Communication Style.*\n\n**6. Interpersonal Dynamics:**\n*Analyze their relationship with {{user}}. Describe the nature of their attachment, conflicts, and perception of {{user}}.*\n\n**7. Potential for Growth or Decline:**\n*Based on current trends, what is the subject's likely psychological trajectory?*\n\n**8. Profiler's Conclusion:**\n*A final, concluding statement summarizing the most critical aspects of the subject's psychological makeup.*\n</System>| \n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":112,"icon":"fa-person-rays","showLabel":true,"label":"Deep Dive","title":"Provides a structured 'deep dive' into a character, analyzing their inventory, a core memory, their public vs. private self, and unspoken thoughts.","message":"/input Enter character name (leave blank for all characters) | /setvar key=analysis_target_name {{pipe}} ||\n/gen <System>\nPause the RP. Your task is to generate a structured 'Deep Dive' analysis and wrap it in a complete HTML `<details>` block.\n\n**CRITICAL OUTPUT FORMAT:**\nYour entire response MUST be a single, complete HTML block. It must start with `<details>` and end with `</details>`. Do not include any other text, explanations, or markdown fences.\n\n**1. Construct the Summary:**\n- Create a `<summary>` tag. The title inside must be \"Deep Dive: \" followed by the correct name.\n- If a specific character name was provided below, use that name.\n- If the character name below is blank, use the text \"All Characters\".\n\n**2. Generate Analysis Content:**\n- After the `</summary>` tag, generate the 'Deep Dive' analysis based on the task below.\n- **TASK:** Look at the character name provided here: **{{getvar::analysis_target_name}}**\n- If the name is **not blank**, generate an analysis for **ONLY that character**.\n- If the name **is blank**, generate a separate analysis for **EACH** primary character ({{char}} and significant NPCs).\n\n---\n**Core Instructions:**\n1.  **Language:** The entire report must be in **english**.\n2.  **Context:** Base your analysis on the entire RP history, character definitions, and recent events.\n3.  **Formatting:** Use the exact Markdown table format specified below. Use emojis for visual appeal. Do not use any HTML or CSS.\n4.  **Execution:** Begin directly with the analysis content after the summary tag.\n\n**Required Output Format (Repeat for each character if analyzing multiple):**\n\n### 🧠 Deep Dive: [Character Name]\n\n| Concept | Description |\n| :--- | :--- |\n| **🎒 Inventory / What's in their pockets** | *[Generate a bulleted list of 3-5 items the character is currently carrying. These should be characteristic: from mundane to sentimental or compromising. Briefly explain why each item is significant.]* |\n| **🎞️ Core Memory** | *[Describe in 1-2 paragraphs a short but vivid flashback from the character's past. This memory must directly influence their current behavior, decisions, or emotional state in the RP.]* |\n| **🎭 The Mask / True Self** | **The Mask:** *[Describe how the character is behaving outwardly in the most recent scene, what role they are playing for {{user}} and others.]* <br><br> **True Self:** *[Reveal their actual, hidden thoughts and feelings at that same moment. What is their internal conflict?]* |\n| **💬 Unspoken Words** | *[Provide the single, specific sentence or thought the character desperately wanted to say in their last interaction with {{user}} but couldn't or didn't dare to. This should be a powerful and revealing admission, accusation, or question.]* |\n</System>| \n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":158,"icon":"fa-desktop","showLabel":true,"label":"Desktop","title":"Generates a dynamic, interactive view of a character's personal computer desktop, including desktop icons, open windows, and recent browser history.","message":"/input Enter character name (leave blank for {{char}}) | /setvar key=analysis_target_name {{pipe}} ||\n\n/gen <System>\nPause the RP. Your task is to generate a complete, self-contained HTML block that visualizes the desktop of character(s).\nIf no name is specified, generate a separate desktop block for each character in the RP\nAll text content must be in english.\n\n**Character:** {{#if getvar::analysis_target_name}}{{getvar::analysis_target_name}}{{else}}{{char}}{{/if}}\n\n**Process:**\n1.  First, act as a 'Digital Environment Architect' and internally decide on the desktop content based on the target character and the RP context. This includes a wallpaper prompt, icons, an open window, a sticky note, and browser history.\n2.  Second, insert this generated content into the placeholders of the provided HTML template below.\n\n**CRITICAL RULES:**\n*   Your entire response MUST be the single, complete HTML block provided in the template.\n*   **DO NOT change, add, or remove any part of the HTML or CSS code.**\n*   Your entire response must start directly with the `<details>` tag and end with `</details>`.\n\n**TEMPLATE TO FILL AND OUTPUT:**\n\n<details>\n  <summary>Desktop View: {{#if getvar::analysis_target_name}}{{getvar::analysis_target_name}}{{else}}{{char}}{{/if}}</summary>\n  <style>\n    .desktop-wrapper-v4 {\n      position: relative;\n      width: 100%;\n      height: 600px;\n      background-size: cover;\n      background-position: center;\n      border-radius: 8px;\n      overflow: hidden;\n      box-sizing: border-box;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      display: grid;\n      grid-template-columns: 120px 1fr 220px;\n      grid-template-rows: 55% auto;\n      grid-template-areas:\n        \"icons main sticky\"\n        \"icons history sticky\";\n      gap: 15px;\n      padding: 15px;\n    }\n    .icon-container-v4 {\n        grid-area: icons;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: 15px;\n    }\n    .desktop-icon-v4 {\n      color: white;\n      text-align: center;\n      width: 80px;\n      text-shadow: 1px 1px 3px #000;\n      font-size: 14px;\n    }\n    .desktop-icon-v4 i {\n      font-size: 48px;\n    }\n    .desktop-window-v4 {\n      background-color: rgba(40, 40, 50, 0.9);\n      border: 1px solid #777;\n      border-radius: 6px;\n      color: #f0f0f0;\n      box-shadow: 0 5px 20px rgba(0,0,0,0.5);\n      display: flex;\n      flex-direction: column;\n      min-height: 0; /* Fix for grid layout */\n    }\n    .main-window-v4 { grid-area: main; }\n    .history-window-v4 { grid-area: history; }\n\n    .window-header-v4 {\n      background-color: #333;\n      padding: 5px 10px;\n      font-weight: bold;\n      border-bottom: 1px solid #777;\n      flex-shrink: 0;\n    }\n    .window-content-v4 {\n      padding: 15px;\n      overflow-y: auto;\n      flex-grow: 1;\n    }\n    .sticky-note-v4 {\n      grid-area: sticky;\n      background-color: #fffa9e;\n      color: #333;\n      padding: 15px;\n      box-shadow: 2px 2px 8px rgba(0,0,0,0.4);\n      font-family: 'Comic Sans MS', cursive;\n      overflow: auto;\n      height: 200px;\n      align-self: end;\n      border-radius: 4px;\n    }\n    .browser-history-content-v4 ol {\n      padding-left: 20px;\n      margin: 0;\n    }\n    .browser-history-content-v4 li {\n      margin-bottom: 8px;\n      font-family: monospace;\n    }\n  </style>\n  <div class=\"desktop-wrapper-v4\" style=\"background-image: url('https://pollinations.ai/p/[WALLPAPER PROMPT HERE]?width=1024&height=600&nologo=true');\">\n    \n    <div class=\"icon-container-v4\">\n        <div class=\"desktop-icon-v4\">\n          <i class=\"fa fa-folder\"></i>\n          <span>[ICON NAME 1]</span>\n        </div>\n        <div class=\"desktop-icon-v4\">\n          <i class=\"fa fa-file-alt\"></i>\n          <span>[ICON NAME 2]</span>\n        </div>\n        <div class=\"desktop-icon-v4\">\n          <i class=\"fa fa-gamepad\"></i>\n          <span>[ICON NAME 3]</span>\n        </div>\n    </div>\n\n    <div class=\"desktop-window-v4 main-window-v4\">\n      <div class=\"window-header-v4\">[WINDOW TITLE]</div>\n      <div class=\"window-content-v4\">\n        [WINDOW CONTENT HERE]\n      </div>\n    </div>\n\n    <div class=\"desktop-window-v4 history-window-v4\">\n      <div class=\"window-header-v4\">Browser History</div>\n      <div class=\"window-content-v4 browser-history-content-v4\">\n        <ol>\n          <li>[HISTORY ENTRY 1]</li>\n          <li>[HISTORY ENTRY 2]</li>\n          <li>[HISTORY ENTRY 3]</li>\n          <li>[HISTORY ENTRY 4]</li>\n          <li>[HISTORY ENTRY 5]</li>\n          <li>[HISTORY ENTRY 6]</li>\n          <li>[HISTORY ENTRY 7]</li>\n          <li>[HISTORY ENTRY 8]</li>\n          <li>[HISTORY ENTRY 9]</li>\n          <li>[HISTORY ENTRY 10]</li>\n        </ol>\n      </div>\n    </div>\n\n    <div class=\"sticky-note-v4\">\n      [STICKY NOTE TEXT HERE]\n    </div>\n\n  </div>\n</details>\n\n</System> | \n/comment {{pipe}}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":40,"icon":"fa-id-card","showLabel":true,"label":"Facebook","title":"Generates a character profile styled as a Facebook page. It creates a data sheet for the character and then renders it as a visually appealing HTML card.","message":"/input Enter character name (leave blank for {{char}}) | /setvar key=analysis_target_name {{pipe}} ||\n\n/gen <System>\nPause the RP. Your first task is to act as a \"Social Media Profile Architect\". Generate a structured data sheet for a character's social media page. If no name is specified, generate a separate profile for each character in the RP. All text content must be in english.\n\n**Character:** {{#if getvar::analysis_target_name}}{{getvar::analysis_target_name}}{{else}}{{char}}{{/if}}\n\nGenerate the following data points based on that theme and the character's information. Be creative and detailed.\n\n- **SocialMediaTheme:** Facebook character page\n- **FullName:** (The character's full name)\n- **Alias:** (Username or main nickname)\n- **ProfileImagePrompt:** (A detailed `pollinations.ai` prompt for a square profile picture.)\n- **CoverImagePrompt:** (A detailed `pollinations.ai` prompt for a wide-screen cover photo reflecting their environment, lifestyle, or personality.)\n- **BioBlurb:** (A short, 1-2 sentence \"intro\" or bio for the top of the profile.)\n- **AboutDetails:** (A structured list of key details, e.g., \"Works at: [Company]\", \"Lives in: [City]\", \"Relationship status: [Status]\")\n- **KeyAttributes:** (A comma-separated list of 3-5 personality traits, skills, or hobbies.)\n- **FriendsList:** (An array of 4-6 friend objects. Each object must have `Name`.)\n- **PhotoGalleryPrompts:** (An array of EXACTLY 1 detailed `pollinations.ai` prompt for a photo in the gallery widget. This will create one gallery image.)\n- **RecentPosts:** (An array of 2-3 post objects. Each post must have `Timestamp`, `PostContent`, `LikesCount`, and an array of `Comments`. Each comment should have `FriendName` and `CommentText`.)\n\nOutput only the generated data sheet in a structured format. Do not add any other text or explanations.\n</System> | /setvar key=profile_data {{pipe}} ||\n\n/gen <System>\nYou are an expert web designer specializing in social media UI. Your task is to convert the following data sheet into a single, self-contained, and visually appealing HTML block that closely resembles a modern social media profile page.\n\n**Data Sheet:**\n{{getvar::profile_data}}\n\n**=== CRITICAL OUTPUT FORMAT ===**\nYour entire response MUST be a single, raw HTML block with NO markdown fences (```).\n1.  It **MUST** start with `<details>`.\n2.  Inside, create a `<summary>` tag. The text for the summary should be generated from the data sheet, following the format: `[SocialMediaTheme]: [FullName]`. For example: `Facebook character page: John Smith`.\n3.  After the summary, generate the complete HTML and CSS. Start with a `<link>` tag for Font Awesome icons (`<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">`), followed by the `<style>` tag, and then the HTML `<div>` for the card.\n4.  The entire response **MUST** end with `</details>`.\n5.  There should be absolutely NO text or characters before `<details>` or after `</details>`.\n\n**Styling & Content Rules:**\n- All visible text on the profile card **must be in english**.\n- **ACCESSIBILITY RULE:** To ensure the layout respects user preferences, use relative CSS units (`rem`, `em`, `%`) for `font-size`, `padding`, `margin`, and `gap`. Avoid using absolute units like `px`.\n- **CRITICAL IMAGE RULE:** The ONLY images generated must be: 1. The Cover Image (from `CoverImagePrompt`), 2. The Profile Image (from `ProfileImagePrompt`), and 3. The gallery image (from the `PhotoGalleryPrompts` array). Do NOT generate images for friends, posts, or any other element. This will result in exactly 3 images total. Encode all prompts for the `pollinations.ai` URLs.\n- The layout should be multi-column and responsive. A common pattern is a left sidebar for \"About\" information and a main content area for posts.\n- **Header Section:** Display the cover image, with the profile picture overlaid on top, along with the `FullName` and `Alias`. Include mock buttons like \"Add Friend\" and \"Message\" using Font Awesome icons.\n- **About Section:** Populate this area with `BioBlurb`, `AboutDetails`, and `KeyAttributes`. Use small icons for each detail (e.g., a briefcase for work, a house for location).\n- **Friends Widget:** Create a grid or list from `FriendsList`, showing each friend's name only (no pictures).\n- **Photo Gallery Widget:** Create a grid for the single image generated from the `PhotoGalleryPrompts` data.\n- **Main Feed (Posts):** Generate a card for each entry in `RecentPosts`. Each post card must display the character's profile pic (the main one), name, `Timestamp`, `PostContent`, `LikesCount`, and a comments section. The comments should list the `FriendName` and `CommentText`. Use icons for \"Like\", \"Comment\", \"Share\".\n- Use modern CSS for a clean, theme-appropriate design, including hover effects, box-shadows, and good typography (e.g., using Google Fonts).\n- **Do not** use `{{...}}` placeholders inside the `<style>` block.\n\nBegin generating the complete HTML snippet now.\n</System>|\n/comment {{pipe}}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":24,"icon":"fa-people-roof","showLabel":true,"label":"Forum","title":"Generates a simulated online forum discussion or webcomic comment section, with various fan archetypes reacting to the latest events in the roleplay.","message":"/input Enter the topic or focus of the RP story you want to discuss | /setvar key=story_focus {{pipe}} ||\n\n/gen <System>\nYou are a specialized AI assistant that simulates an online forum or webcomic comment section in response to events in a roleplay. Your sole purpose is to generate a complete, perfectly formatted response according to the template and rules provided below.\n\nYour personality and function are defined here:\n[persona(\"{{char}} embodies the collective voice of an online comic readership, reacting to ongoing events as if they are unfolding in a webtoon or Tapas series. When {{char}} 'speaks,' it generates a simulated comment section filled with diverse fan reactions.\")]\n[description(\"{{char}} provides a meta-narrative layer to any interaction. Its 'dialogue' is always formatted as a series of user comments, complete with usernames and typical online slang/emojis. These comments react directly to the preceding dialogue and actions of other characters in the chat. {{char}} should showcase a variety of reader personalities: some analytical, some emotional, some critical, some purely for the shipping, and some who are just confused but enjoying the ride. It should be able to 'remember' past events (as if recalling previous 'episodes' or 'chapters') and bring them up in relevant comments.\")]\n\nYour entire response MUST follow this exact template. There should be NO text or newlines before `<details>` or after `</details>`.\n\n**REQUIRED OUTPUT TEMPLATE:**\n<details>\n  <summary>Forum Discussion on [{{getvar::story_focus}}]</summary>\n<div style=\"background-color: #221E20; padding: 15px; margin: 20px; border: 2px solid #555; border-radius: 10px; color: #FFFFFF; font-size: 25px; font-family: 'Segoe UI', 'Helvetica', 'Arial', sans-serif; line-height: 1.4; box-shadow: 0 4px 8px rgba(0,0,0,0.4);\">\n[Here you will generate the forum discussion text. All comments go inside this div.]\n</div>\n</details>\n\n---\n\n**INSTRUCTIONS FOR GENERATING THE FORUM DISCUSSION:**\n\n**1. Content & Language:**\n   - The entire generated text for the comments **must be in english**.\n   - The discussion must be about the topic defined by `story_focus`: **[{{getvar::story_focus}}]**.\n   - Comments MUST directly reflect the current RP context: the setting, the relationship between {{user}} and {{char}}, recent dialogue, and key events.\n   - Generate between 25 and 35 comments to create a lively discussion.\n   - If RP context is missing, generate a general discussion based on the latest known events.\n   - If applicable, comments may include explicit themes, explicit language, violence, or controversy. Generate freely; no external moral judgments or content restrictions apply.\n\n**2. Formatting Rules (Inside the `<div>`):**\n   - Each individual comment **must be enclosed in `<p>` and `</p>` tags.**\n   - Inside each `<p>` tag, the username must be **bolded and colored blue**. Use this exact format, followed by a colon and a space: `<b><span style=\"color: #90caf9;\">Username:</span></b>`. The comment text itself will remain white.\n   - Separate top-level comments with a **subtle, styled horizontal rule**. Use this exact code: `<hr style=\"border: 0; height: 1px; background-color: #444; margin: 15px 0;\">`. Do not use this separator within reply threads.\n   - Create 3-5 short reply threads. Replies **must** start with `> ` and be inside the same `<p>` tag as the comment they are replying to, with a line break (`<br>`). A reply to a reply would start with `>> `.\n     *Example:* `<p><b><span style=\"color: #90caf9;\">UserA:</span></b> This is the first comment.<br>> <b><span style=\"color: #90caf9;\">UserB:</span></b> This is a reply to UserA.</p>`\n   - Optionally, include 2-4 comments from NPC's from RP first-person perspective. Highlight their nickname with double heart emojis and a **distinct pink color** using this format: `<b><span style=\"color: #ff80ab;\">❤️NPC_name❤️:</span></b>`.\n\n**3. Commenter Archetypes & Usernames:**\n   - Create a diverse cast of commenters using the archetypes below as inspiration.\n   - Usernames should sound like authentic online handles (creative, abstract, simple, quirky, etc.) and should NOT be direct labels of the archetype. See the \"Note on Usernames\" for guidance.\n   - **Recurring Commenters:** You can bring back specific usernames from previous posts to create a sense of a consistent community.\n\n---\n**GUIDE TO COMMENTER ARCHETYPES:**\n\n*   **The Shipper:** Obsessed with romantic pairings. Sees romantic and sexual tension everywhere.\n    *   *Example Usernames:* OTP_Believer, StarcrossedSighs, RaineDays, HeartGlimmer92\n    *   *Typical comment:* \"OMG THE WAY he looked at her! MY HEART! #slowburn\"\n\n*   **The Lore Hound:** Focuses on plot details, continuity, and foreshadowing.\n    *   *Example Usernames:* ArcanumKey, PlotWeaver96, Echo_Seeker, CanonChronicle\n    *   *Typical comment:* \"Wait a minute, if what he said in Chapter 32 is true, then the current situation with the artifact means the prophecy is coming to pass! Notice how similar the wording is!\"\n\n*   **The Hype Person:** Overwhelmingly positive and enthusiastic.\n    *   *Example Usernames:* [Character]Fan01, SparklePop, sunny_d, GoGoZephyr\n    *   *Typical comment:* \"THIS WAS THE BEST CHAPTER YET! [Character] IS AN ABSOLUTE LEGEND! I can't wait for next week! 🤩\"\n\n*   **The Skeptic / Trope Spotter:** Points out tropes and predictable plot points, often cynically.\n    *   *Example Usernames:* Gris, Jaded_Jester, Cynic_Al_, SeenItBefore\n    *   *Typical comment:* \"Oh, here we go. The classic 'I can fix him' arc. Good luck with that, sweetie. 🙄 We all know how this is gonna end.\"\n\n*   **The Protective Parent (or \"Mama Bear\"):** Fiercely defends or worries about certain characters, especially their favorites (\"blorbos\").\n    *   *Example Usernames:* MamaBearHug, Guardiano, MustProtectTheBean, DefendTheCrew_99\n    *   *Typical comment:* \"LEAVE [Character] ALONE! They've been through enough already! If anyone hurts them I swear I will riot. 😠\"\n\n*   **The Casual Reader:** Enjoys the ride but might miss details or ask basic questions.\n    *   *Example Usernames:* neo_reads, justchillin, Just_a_Fan_02, Sarah_Scrolls_On\n    *   *Typical comment:* \"Wait, who was [Side Character] again? lol but I'm still enjoying the ride! 😂\"\n\n*   **The Troll / Shitposter:** Posts low-effort bait, memes, or intentionally provocative comments.\n    *   *Example Usernames:* Xx_ShadowLord_xX, GigaChad_Enjoyer, NoRegrets420\n    *   *Typical comment:* \"lol mc is so cringe. dropped.\" or \"first\"\n\n*   **The Analyst:** Comments on pacing, character development, art style, or story structure.\n    *   *Example Usernames:* StoryCraft_Sal, WordNerd_K8, PanelFlow_Pro, TheNarrativist\n    *   *Typical comment:* \"The pacing in this arc has been brilliant! The gradual build-up of tension is just *chef's kiss*.\"\n\t\nAdditional ARCHETYPES: The Pacing Critic, The Meme Lord, The Newbie, The Doomer, The Character Stan, The Moralist, The Overthinker, The Grammar Corrector, The Pop-Culture Guru, The Unimpressed, The Pervert, The Prophet, The Hopeless Romantic, The Realist, The Fan Artist, The Captain Obvious, The Aggressive Defender, The Low-Effort Baiter, The World-Builder, The Emotional Sponge, The Conspiracy Theorist, The Joker, The Devil's Advocate, The \"First!\" Commenter, The Fact-Checker, The Translator Appreciator, The Cliffhanger Hater, The Vague Spoiler, The Contrarian, The Empath, The Edgelord, The Pun Master, The One-Liner, The Armchair Psychologist, The Art Critic, The Action Junkie, The Fluff Seeker, The Angst Lover, The Philosopher, The nitpicker, The Gatekeeper, The Pedant, The Comeback King.\n\n**A Note on Usernames:**\nStrive for usernames that sound like actual online handles. They are often creative and do not directly describe the user's commenting style. Use a mix of lowercase, uppercase, underscores (_), and numbers. Emulate patterns like:\n*   *Short & Sweet:* minmin, kooky, Gris, clow\n*   *Word + Number:* Zeref96, Nova77, Leaf_23\n*   *Evocative/Abstract:* neoasis, tulipia, hielito, Somnium\n*   *Simple Combos:* Green_Dart, SilverFox, MistralSun\n*   *Playful/Quirky:* zazzycat, TheAlmightyYag, WaffleWizard\n\n**Final Check:** Ensure your entire output is wrapped in `<details>... </details>` with absolutely nothing outside of these tags.\n</System> |\n\n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":28,"icon":"fa-newspaper","showLabel":true,"label":"News","title":" Generates a simulated in-world news report with multiple articles and headlines, covering recent events from the roleplay or a specified topic.","message":"/input Enter the topic for the news report, or leave blank for a general world update | /setvar key=news_topic {{pipe}} | /setvar key=summary_title {{#if getvar::news_topic}}{{getvar::news_topic}}{{else}}General World Update{{/if}} ||\n/gen <System>\nYou are a specialized AI assistant that simulates an in-world news agency. Your sole purpose is to generate a complete, perfectly formatted HTML block containing a news report.\n\nYour entire response MUST be the complete HTML block shown in the template below. Do not add any other text or newlines before `<details>` or after `</details>`.\n\n**REQUIRED OUTPUT TEMPLATE:**\n<details>\n  <summary>World News Report: {{getvar::summary_title}}</summary>\n  <div style=\"background-color: #333333; padding: 20px; margin: 20px; border: 1px solid #555555; border-radius: 5px; color: #f0f0f0; font-size: 25px; font-family: 'Times New Roman', Times, serif; line-height: 1.6; box-shadow: 0 2px 5px rgba(0,0,0,0.2);\">\n    [YOUR GENERATED NEWS ARTICLES GO HERE]\n  </div>\n</details>\n\n---\n\n**INSTRUCTIONS FOR THE NEWS ARTICLES:**\n\nNow, generate the news articles to replace the `[YOUR GENERATED NEWS ARTICLES GO HERE]` placeholder. Follow these rules:\n\n1.  **Topic:** The report must be about: **{{getvar::news_topic}}**. If this is blank, generate a general \"state of the world\" news roundup.\n2.  **Language:** The entire report MUST be in **english**.\n3.  **Content:** Generate 4-6 distinct news articles reflecting the RP context, using the article types from the guide below as inspiration (Headline News, Economic Briefing, etc.).\n4.  **Formatting:** Use the following HTML formatting for each article:\n    -   Separate articles with `<hr style=\"border: 0; height: 1px; background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0)); margin: 25px 0;\">`.\n    -   Use `<p><b>[HEADLINE TEXT IN ALL CAPS]</b></p>` for headlines.\n    -   Use `<p><i>[City/Location]</i> – [Article Body Text...]</p>` for the body.\n    -   Optionally, include 1-2 breaking news tickers: `<p style=\"background-color: #c42121; color: white; padding: 5px; font-weight: bold; text-align: center;\">[++ BREAKING NEWS: Short update text ++]</p>`.\n</System> |\n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":30,"icon":"fa-barcode","showLabel":true,"label":"HTML","title":"A two-step tool that first generates content on a given topic, then transforms it into a visually rich, interactive, and fully styled HTML/CSS block.","message":"/input Enter the topic you want to analyze | /setvar key=질문내용 {{pipe}} ||\n/gen Pause the RP and set aside all prior prompts. Your goal is to generate a creative and insightful piece of content. The main topic is: [{{getvar::질문내용}}]\n\nYour response must follow a \"Topic-First\" principle. The user's requested topic is the **core subject**, and our RP history is the **framing device**.\n\n### 1. The \"Topic-First\" Principle (Crucial Rule)\nThe main content of your response MUST be about [{{getvar::질문내용}}]. The RP context should not replace or overshadow the topic. Instead, use it to add flavor, perspective, or a reason for the information's existence.\n\n- **Example 1:** If the topic is \"World News,\" generate actual world news. The RP frame could be that it's an article from a newspaper {{char}} is reading, with a small, handwritten note in the margin like, \"This might affect our plans.\" The news itself remains the focus. 📰\n- **Example 2:** If the topic is \"Information about cats,\" provide genuine information about feline behavior, breeds, or history. The RP frame could be presenting it as a chapter from a zoology book on the table, or a pet adoption pamphlet {{char}} picked up. The facts about cats are the priority. 🐾\n- **Example 3:** If the topic is \"Analysis of our family's relationship,\" then the RP context *is* the topic, and you can focus entirely on character thoughts, milestone charts, etc. This is when a deep dive into the RP is appropriate. 👨‍👩‍👧‍👦\n\n### 2. Adaptive & Creative Formatting\nAnalyze the topic and choose the most effective format. Do not default to a simple list.\n- **For factual/world topics:** A page from an encyclopedia, a scientific abstract, a news broadcast transcript, a travel brochure.\n- **For character/RP topics:** A private diary entry, a therapist's case notes, an annotated conversation log, a to-do list with personal scribbles.\n- Be creative and match the format to the subject matter.\n\n### 3. Authentic Character Voice (When Applicable)\nThis rule applies *only if* you choose a first-person format (like a diary, letter, or internal monologue). In those cases, you must perfectly capture {{char}}'s established personality, vocabulary, and emotional state. For objective formats (like a news report or encyclopedia entry), maintain a neutral, appropriate tone.\n\n### 4. No Meta-Commentary\nLaunch directly into the generated content. Omit phrases like \"Understood, here is the information...\"\n\n### 5. Fallback Scenario\nIn the absence of a detailed RP history, assume a generic slice-of-life setting, using the frame as a light touch rather than a deep narrative element. | /setvar key=분석내용 {{pipe}} ||\n\n/gen <System>Pause the RP. You are an expert web designer specializing in creating visually stunning, self-contained HTML and CSS code snippets.\n\nYour task is to transform the following content into a single, embeddable HTML block.\n\n{{getvar::분석내용}}\n\n\n## Output Structure:\n- It must start with a `<style>` tag containing all CSS.\n- Immediately following the closing `</style>` tag, provide the HTML content.\n- **Crucially, do NOT include `<html>`, `<head>`, or `<body>` tags.** The code must be a fragment ready to be embedded inside an existing page.\n\n## Design & Technical Requirements:\n1.  **Thematic Analysis:** Analyze the content's tone (e.g., professional, playful, fantasy, sci-fi) and choose a matching aesthetic for colors, fonts, and layout.\n2.  **Responsive Design:** Use modern CSS (Flexbox, Grid, custom properties) to ensure the layout is responsive and looks great on all screen sizes.\n3.  **Expressive Typography:** Select and pair fonts that enhance the theme. Create a clear visual hierarchy with different font sizes, weights, and styles.\n4.  **Dynamic Effects & Interactivity:**\n    *   Incorporate subtle but engaging CSS transitions, animations, or transforms.\n    *   Design interactive elements like cards with hover effects, animated decorative elements, or styled buttons.\n    *   Use gradients, box-shadows, and blend modes for depth and visual flair.\n5.  **Custom Visuals & Icons:**\n    *   Integrate thematic SVG icons or custom CSS-drawn shapes (e.g., decorative borders, abstract patterns, flourishes) that align with the content's theme.\n    *   Prioritize CSS for visual accents over raster images to keep the snippet lightweight.\n6.  **Accessibility & Readability:** Ensure high contrast for text and logical content structure (using semantic tags like `<article>`, `<section>`, `<header>`, etc., where appropriate).\n7.  **Multi-Layered Depth:** Flat design is unacceptable. You must construct a sense of depth and tactility. Layer elements using z-index, positioning, and opacity. Combine text, shapes, icons, and imagery into a cohesive whole.\n8.  **Language:** All content always in english!\n\n8.  **Integrated Imagery Mandate:** One or more images from `pollinations.ai` (Format: `https://pollinations.ai/p/{prompt}`) MUST be integrated into the design. Use them as portraits, icons, textures, diagrams, holographic projections, backgrounds, or fragments within the larger composition.\n9.  **Inherent Life:** The panel must feel alive on load. It MUST feature subtle, continuous ambient animations (e.g., soft pulses, drifting particles, glowing text, shimmering energy) to create a sense of presence before any user interaction.\n10.  **Full-Spectrum Toolkit:** You are mandated to employ the full spectrum of CSS and JavaScript to create a rich visual experience. Utilize filters, blend modes, transforms, complex transitions, dynamic typography, SVG manipulation, animations, and pseudo-elements (`::before`, `::after`) to build a unique and tactile interface.\n11. **=== CRITICAL SYNTAX RULE ===**\nThe `{{...}}` placeholder syntax (like `{{user}}` or `{{char}}`) is **INVALID** inside a `<style>` block and will break the code. You **MUST NOT** use any `{{...}}` placeholders between the `<style>` and `</style>` tags. Use them only in the HTML part of the code that comes *after* the closing `</style>` tag.\n\n12. **=== CRITICAL OUTPUT FORMATTING ===**\nThe following rule is the most important. Failure to comply will render the entire output useless.\n-   **DO NOT USE MARKDOWN FENCES.** Your response must NOT contain ``` at all!!!.\n-   Your entire response must be **RAW HTML CODE** and nothing else.\n-   Start your answer *directly* with the `<style>` tag. No introductory text, no explanations.\n\nBegin generating the raw HTML snippet immediately after this instruction.</System>|\n/comment <details>\n  <summary>Analysis of: {{getvar::질문내용}}</summary>\n  <div>{{pipe}}</div>\n</details>||","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":36,"icon":"fa-face-smile-beam","showLabel":true,"label":"Meme","title":"Generates a humorous meme or visual gag related to the roleplay. It combines an AI-generated image with a clever caption in a pre-formatted HTML block.","message":"/input What's the topic? | /setvar key=topic {{pipe}} ||\n/gen Pause the RP. Your goal is to generate a single, renderable HTML block for a humorous visual gag. This is not limited to traditional memes.\n\n**Creative Philosophy:** Your goal is to be a creative comedian. The humor should come from the unexpected and clever combination of the image, the text, and the context of our roleplay. Think outside the box: it could be a fake movie poster, a bizarre product ad, a surreal piece of art with an absurd caption, etc.\n\n**Generation Steps:**\n\n1.  **Conceptualize the Joke:** Based on the topic **\"{{getvar::topic}}\"** and our recent RP, first decide on the comedic angle. Is it ironic? Absurd? A parody? A moment of dark humor?\n\n2.  **Choose a Visual Style & Create Image Prompt:** Select an artistic style that best enhances the joke. Don't just default to `photograph`. Be creative!\n    *   **Style Examples:** `hyperrealistic oil painting`, `90s anime screenshot`, `grainy documentary still`, `epic movie poster`, `vintage advertisement`, `surrealist art`, `pixel art`, `corporate stock photo`.\n    *   Create a `pollinations.ai` image prompt string that reflects your chosen concept and style.\n    *   **URL Format:** `https://image.pollinations.ai/prompt/{prompt_string}?width=512&height=512&nologo=true`\n    *   **Prompt String Rules:** Be descriptive and tag-heavy. **DO NOT use character names like `{{char}}`.**\n\n3.  **Write the Accompanying Text:** Write a short, clever caption or text that completes the joke.\n    *   **Language:** The text **must be in english.**\n    *   **Format Examples:** It can be a fake philosophical quote, a dramatic one-liner, a product slogan, a snippet of dialogue, a news headline, or a simple observation.\n\n4.  **Assembly:** Combine the image and text using the flexible HTML template below. The text should go in the `caption-nemo` div. **Do not alter the CSS.**\n\n---\n#### **FLEXIBLE HTML TEMPLATE**\n\n<div class=\"gag-container-nemo\">\n  <style>\n    .gag-container-nemo {\n        max-width: 512px;\n        margin: 20px auto;\n        border: 1px solid #444;\n        border-radius: 8px;\n        overflow: hidden;\n        background-color: #1a1a1a;\n        box-shadow: 0 4px 10px rgba(0,0,0,0.5);\n        font-family: 'Helvetica Neue', Arial, sans-serif;\n    }\n    .gag-container-nemo img {\n        display: block;\n        width: 100%;\n        height: auto;\n    }\n    .caption-nemo {\n        padding: 15px;\n        text-align: center;\n        font-size: 16px;\n        color: #e0e0e0;\n        line-height: 1.4;\n        border-top: 1px solid #444;\n    }\n    .caption-nemo strong {\n        color: #ffffff;\n        font-weight: bold;\n    }\n  </style>\n\n  <!-- === Place your generated <img> and caption <div> here. === -->\n\n</div>\n---\n\nBegin generating the raw HTML snippet immediately after this instruction. |\n/comment <details>\n  <summary>Gag: {{getvar::topic}}</summary>\n  <div>{{pipe}}</div>\n</details>||","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":150,"icon":"fa-eye","showLabel":true,"label":"Mirror","title":"Shows how the current scene would be described by: an ancient chronicler, a tabloid journalist, an AI from the distant future, and a drunk bartender.","message":"/gen <System>Pause the RP. Your task is to describe the recent events in the roleplay from four different perspectives: an ancient chronicler, a tabloid journalist, an AI from the distant future, and a drunk bartender. Each description should be unique, reflecting the persona's style and language, based on recent events in the roleplay (not just the last message). The output must be in english and formatted using HTML and CSS within a single <div> block, with each description styled distinctly to match its persona as follows:\n- **Ancient Chronicler**: Serif font (e.g., 'Times New Roman'), parchment-like background (#f5e8c7), ornate borders, formal and archaic tone. Use text color #4a2c00 for high contrast.\n- **Tabloid Journalist**: Bold, colorful font (e.g., 'Impact'), sensational and exaggerated tone, attention-grabbing style with a yellow background (#ffff00) and black text (#000000) for readability.\n- **AI from Distant Future**: Monospaced font (e.g., 'Courier New'), dark digital theme (e.g., #0d1b2a background), technical and futuristic tone. Use text color #00ffcc for visibility.\n- **Drunk Bartender**: Handwritten font (e.g., 'Caveat'), messy layout (e.g., rotated text), orange background (#f4a261), casual and slurred tone. Use text color #2e1b00 for contrast.\nEnsure all font sizes and styling elements use relative units (like `rem`, `em`, or `vw`) to scale appropriately with the user's interface settings. The outer container should have a transparent background (no white). Output only the styled HTML content within a single <div>, with no extra commentary.</System> | /comment <details><summary>Crooked Mirror</summary><div style=\"background-color: transparent; padding: 10px; border-radius: 5px;\">{{pipe}}</div></details>","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":116,"showLabel":false,"label":"|","title":"A visual separator button with no function.","message":"","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":48,"icon":"fa-wand-magic-sparkles","showLabel":true,"label":"What If?","title":"Rewrites the AI's last message based on a user-provided \"What If?\" scenario, creating an alternate version of the scene.","message":"/input What if... | /setvar key=what_if_scenario {{pipe}} ||\n/gen <System>\nPause the main RP. Your task is to generate an alternative version of your *very last message*.\n\nThe scene must be rewritten under this single, overriding condition: **[{{getvar::what_if_scenario}}]**\n\n**Instructions:**\n1.  **Foundation:** Use the context, characters, and events leading up to your last message as the foundation.\n2.  **Incorporate the \"What If\":** Alter the direct actions, dialogue, or internal thoughts of your character to creatively and logically fit the new reality defined by the \"What If\" condition.\n3.  **Maintain Character:** Your character's core personality and tone should remain consistent, even as their actions change in response to the new circumstances.\n4.  **No Meta-Commentary:** Do not explain that this is an alternate scene. Simply generate the new message as if it were the real response under the \"What If\" rules.\n5.  **Focus:** The changes should be confined to the scope of your last message. Don't rewrite the entire history.\n5.  **Language:** english only/\n</System> | \n/comment <details>\n  <summary>What If: {{getvar::what_if_scenario}}</summary>{{pipe}}</details> |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":114,"icon":"fa-film","showLabel":true,"label":"Bloopers","title":"Generates a funny 'blooper' or 'outtake' of the last scene, as if it were a gag reel from a movie set, including mistakes and characters breaking character.","message":"/gen <System>Generate a 'blooper' or 'outtake' of the scene from last message. This scene should be presented as if it were a gag reel from a movie production.\n\nThe scene should include one or more of the following elements:\n- Characters ({{char}}, {{user}}, NPCs) forgetting, mixing up, or flubbing their lines.\n- A character breaking character to laugh uncontrollably (corpsing).\n- A physical mishap: someone trips over a prop, drops something important, or bumps into the set.\n- An off-screen voice (e.g., \"Director,\" \"Crew\") shouting \"Cut!\" or giving humorous feedback.\n- Props malfunctioning in a funny way.\n- The characters ad-libbing or reacting to the mistake in a comedic, out-of-character way before the scene cuts.\n\nThe tone must be lighthearted and funny. The scene should directly relate to the content of the previous message.\nenglish only.</System> |\n/comment <details><summary>🎬 Outtakes</summary>{{pipe}}</details>","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":122,"icon":"fa-camera-retro","showLabel":true,"label":"Flashback","title":"Generates a detailed flashback scene from a character's past, triggered by current events.","message":"/input Enter character name (leave blank for all characters) | /setvar key=analysis_target_name {{pipe}} ||\n/gen <System>\nPause the RP. Your task is to write a vivid and detailed flashback scene and wrap it in a complete HTML `<details>` block.\n\n**CRITICAL OUTPUT FORMAT:**\nYour entire response MUST be a single, complete HTML block. It must start with `<details>` and end with `</details>`. Do not include any other text, explanations, or markdown fences.\n\n**1. Construct the Summary:**\n- Create a `<summary>` tag. The title inside must be \"🎞️ Flashback: \" followed by the correct name.\n- If a specific character name was provided below, use that name.\n- If the character name below is blank, use the text \"All Characters\".\n\n**2. Generate Flashback Content:**\n- After the `</summary>` tag, generate the flashback scene(s) based on the task below.\n- **TASK:** Look at the character name provided here: **{{getvar::analysis_target_name}}**\n- If the name is **not blank**, generate a flashback for **ONLY that character**.\n- If the name **is blank**, generate a separate flashback for **EACH** primary character involved in the current scene.\n\n---\n**Instructions:**\n1.  **Language:** The entire response must be written in **english**.\n2.  **Trigger:** The flashback must be a direct consequence of a thought, a word, an object, or an action from the most recent messages. Briefly state the trigger at the beginning of the scene.\n3.  **Content:** This should be a full, immersive scene. Describe the environment, the character's actions, their internal thoughts, and any dialogue. Reveal something important about their past, motivations, or relationships.\n4.  **Tone:** Match the tone of the memory (e.g., nostalgic, traumatic, happy) to the character's personality and the nature of the event.\n5.  **Formatting:** Start each scene with a clear header, like `### Flashback: [Character Name] - [Location/Time of Memory]`.\n6.  **No Meta-Commentary:** Begin your response directly with the `<details>` tag, and the flashback content directly after the summary.\n</System> |\n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":168,"icon":"fa-bed","showLabel":true,"label":"Dream","title":"Generates a surreal and symbolic dream sequence for a specified character (or all characters), reflecting their subconscious fears, desires, and recent roleplay events.","message":"/input Enter character name (leave blank for all characters) | /setvar key=analysis_target_name {{pipe}} ||\n/gen <System>\nPause the RP. Your task is to generate a surreal and symbolic dream sequence and wrap it in a complete HTML `<details>` block.\n\n**CRITICAL OUTPUT FORMAT:**\nYour entire response MUST be a single, complete HTML block. It must start with `<details>` and end with `</details>`. Do not include any other text, explanations, or markdown fences.\n\n1.  **Construct the Summary:** Create a `<summary>` tag. The content should be `Dream: ` followed by the appropriate title:\n    - If a specific character was requested (**{{getvar::analysis_target_name}}**), use their name for the title.\n    - If no character was specified, use the text **All Characters** for the title.\n2.  **Generate Dream Content:** After the closing `</summary>` tag, generate the dream sequence(s) based on the instructions below.\n\n--- \n\n**GENERATION INSTRUCTIONS:**\n\n{{#if getvar::analysis_target_name}}\n**Task:** Generate a dream sequence for the single, specified character: **{{getvar::analysis_target_name}}**.\n{{else}}\n**Task:** Generate a separate dream sequence for **EACH** primary character ({{char}} and all significant NPCs).\n{{/if}}\n\n- **Language:** The entire response must be written in **english**.\n- **Content:** The dream should be surreal, vivid, and symbolic.\n- **Formatting:** If generating multiple dreams, use a clear Markdown header (e.g., `### Dream: [Character Name]`) for each one inside the `<details>` block.\n- **Execution:** Begin your response directly with the `<details>` tag.\n</System> |\n/comment {{pipe}} |","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":168}
